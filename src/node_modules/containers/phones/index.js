import React, {Component} from 'react';
import Select from 'react-select';
import Search from 'components/search';
import 'react-select/dist/react-select.css';
import {connect} from 'react-redux';
import {
	fetchPhones,
	addPhoneToBasket,
	fetchCategories,
	filterItems
} from 'actions';
import {getPhones} from 'selectors';
import {Link} from 'react-router';
import R from 'ramda';

class Phones extends Component {

	constructor(props) {
		super(props);
		this.state = {
			offset: 0,
			option: '1'
		}
	}

	componentDidMount() {
		this.props.fetchPhones()
		this.props.fetchCategories()
	}

		renderPhone(phone, index) {
			const {addPhoneToBasket} = this.props;
			const shortInfo = `Описание: ${R.take(60, phone.info)}...`;
			const quantity = phone.qty > 0 ? true : false;
			return (
				<div className='col-sm-4 col-lg-4 col-md-4 book-list' key={index}>
					<div className='thumbnail'>
						<img 
							className='img-thumbnail' 
							src={phone.image}  
							alt={phone.name} 
						/>
						<div className='caption'>
							<h4 className='pull-right'>${phone.price}</h4>
							<h4>
								<Link to={`/item/${phone.id}`}>
									{phone.name}
								</Link>
							</h4>
							<p>{shortInfo}</p>
							<p>
								<span>Наличие: </span>
								{quantity && <span className='item-qty-true'>Есть</span>}
								{!quantity && <span className='item-qty-false'>Нет</span>}
							</p>
							<p className='itemButton'>
								<button 
									className='btn btn-primary'
									onClick={() => addPhoneToBasket(phone.id)}
								>
									Buy now
								</button>
								<Link to={`/item/${phone.id}`} className='btn btn-default'>More info</Link>
							</p>
						</div>
					</div>
				</div>
			)
		}

		logChange(e) {
			this.setState({
				...this.state,
				option: e.value
			})
			this.props.filterItems({
				option: e.value,
				sortDirection: e.direction,
				sortField: e.fieldd
			})
		}

		loadMoreItems() {
			this.setState({
				...this.state,
				offset: this.state.offset + 3
			})
		}

		render() {
			const options = [
				{ value: '1', label: 'По возростанию цены', direction: true, fieldd: 'price' },
				{ value: '2', label: 'По убыванию цены', direction: false, fieldd: 'price' },
				{ value: '3', label: 'По наличию', direction: false, fieldd: 'qty' },
			];
			let {phones} = this.props;
			phones = R.slice(0, this.state.offset + 3, phones);
				return (
						<div>
							<div className='sort-list'>
								<div className='field-search-select search-field'>
									<Search />
								</div>
								<div className='field-search-select select-field'>
									<div className='sort-list-left'>
										<p>Сортировка: </p>
									</div>
									<div className='sort-list-right'>
										<Select
											name="form-field-name"
											value={this.state.option}
											options={options}
											onCloseResetsInput={false}
											onChange={this.logChange.bind(this)}
										/>
									</div>
								</div>
							</div>
							<div className='books row'>
								{phones.map((phone, index) => this.renderPhone(phone, index))}
							</div>
							<div className='row'>
								<div className='col=md-12'>
									<button 
										className='pull-rigth btn btn-primary'
										onClick={this.loadMoreItems.bind(this)}
									>
										Load more...
									</button>
								</div>
							</div>
						</div>
				)
		}
}

const mapStateToProps = (state, ownProps) => {
	return {
		phones: getPhones(state, ownProps)
	}
}

const mapDispatchToProps = {
		fetchPhones,
		addPhoneToBasket,
		fetchCategories,
		filterItems
}

export default connect(mapStateToProps, mapDispatchToProps)(Phones);